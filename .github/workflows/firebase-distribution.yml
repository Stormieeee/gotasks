name: Build and Deploy to Firebase App Distribution

on:
  push:
    branches: [ dev ]  # Adjust according to your branch name
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'  # Specify your Flutter version
          channel: 'stable'
      
      - name: Get Flutter dependencies
        run: flutter pub get
      
      - name: Create Firebase Service Credentials file
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' > firebase_credentials.json
      
      - name: Display Signing Report (Debug and Release Keys)
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew signingReport
           cd ..
      - name: Build APK
        run: flutter build apk --release
      
      # Extract fingerprints from the built APK
      - name: Extract APK Fingerprints
        run: |
          echo "Extracting fingerprints from release APK"
          unzip -p build/app/outputs/flutter-apk/app-release.apk META-INF/CERT.RSA | keytool -printcert
          echo "====== FINGERPRINTS ABOVE ======"
          
      - name: Deploy to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFile: firebase_credentials.json
          groups: testers  # Specify your tester groups
          file: build/app/outputs/flutter-apk/app-release.apk
          releaseNotes: "New release from GitHub Actions"